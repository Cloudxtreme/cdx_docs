ubuntu cloud computing

https://help.ubuntu.com/community/Eucalyptus
http://open.eucalyptus.com/wiki/EucalyptusInstall_v1.5.2
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   23  wajig install openssh-server -y
   30  wajig install vim-nox
   31  wajig install sysv-rc-conf
   32  wajig install lvm2 xfsprogs
   33  wajig install ntp
   55  wajig install ganglia-monitor

   97  wajig install build-essential fakeroot deborphan subversion 
   99  wajig install sun-java6-jdk -y
  100  wajig install libpam-ldap libnss-ldap -y

  101  wajig install eucalyptus-cloud eucalyptus-cc

  104  wajig install kvm libvirt-bin ubuntu-vm-builder
  105  wajig install ca-certificates
  106  wajig install python-virtinst
  107  wajig install virt-viewer
  108  wajig install xterm xauth
  111  wajig install eucalyptus-nc
  118  wajig install uml-utilities

  112  wajig install smbfs
  113  wajig install wireshark
  114  wajig install winbind samba

  116  wajig install ruby rdoc irb libyaml-ruby libzlib-ruby ri libopenssl-ruby 
  117  wajig install ruby1.8-dev libldap-ruby1.8 -y
  133  wajig install curl


on cluster+cloud:
wajig install eucalyptus-cloud eucalyptus-cc

on node:
wajig install eucalyptus-nc


-- on node, configure bridge interface
# cd /etc/network
# vi interfaces
auto eth0
iface eth0 inet dhcp

auto br0
iface br0 inet dhcp
        bridge_ports eth0
        bridge_fd 9
        bridge_hello 2
        bridge_maxage 12
        bridge_stp off

# /etc/init.d/networking restart

# /etc/init.d/eucalyptus-nc stop
# cd /etc/eucalyptus
# vi eucalyptus.conf
VNET_INTERFACE="br0"
VNET_BRIDGE="br0"
# /etc/init.d/eucalyptus-nc start


-- on both:
# vi /etc/sysctl.conf 
net.ipv4.ip_forward=1

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  147  /etc/init.d/eucalyptus-cloud restart
  148  /etc/init.d/eucalyptus-cc restart

  150  euca_conf -addcluster testcluster localhost
New cluster 'localhost' on host 'localhost' successfully added.

euca_conf -addnode ubuntu904

-- on node:
sudo tee ~eucalyptus/.ssh/authorized_keys > /dev/null <<EOT
ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAt4N+1Cj6jBwjq/yKvnABQf38iJDdOwIB53ypFZrdWVMoRNUjF94WqvtjWRiIEj0yKtZQu+w/arF66tryu14xYaKpXhpfWtutpdpqERL2cyXK/YUkUuj0PtyddzXeyAdTqcTfiwwhw5QdONSMOJVepjdE7wd+G+4OOyCZ//O02llBSGRL45PR4JnywsGWGli5+qX8NixMLydNuYfJKYisH8g2ZBE7hbdJfj+i9nUCBDKVXu+MeZ9aQeI5/R14yq1yOc2N0oHwzc4Ld6wEE0y2X1klU5XtMjCDo+IFe+qo0O2610P7MlaeRvdLUbQRcaXpQWvTLPwKnl7A4wCI/w4dlw== eucalyptus@ubuntu904
EOT

-- on cluster
(hit return)

SUCCESS: added node 'ubuntu904' to '/etc/eucalyptus/eucalyptus.conf'


https://ubuntu904:8443
(change admin pwrd)
(enter admin email address)
Walrus url: http://ubuntu904:8773/services/Walrus

Click: credentials tab
Click Download Certificate


(Not done, yet) 
Click Register
On firewall, open:
67.95.201.194:8443 to ubuntu904

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

mkdir eucalyptus
cd eucalyptus
wget http://s3.amazonaws.com/ec2-downloads/ec2-api-tools-1.3-30349.zip
wget http://s3.amazonaws.com/ec2-downloads/ec2-ami-tools-1.3-26357.zip 

unzip ec2-api-tools-1.3-30349.zip
unzip ec2-ami-tools-1.3-26357.zip


mkdir .euca
cd .euca
mkdir bin etc lib
cp -rp /root/eucalyptus/ec2-ami-tools-1.3-26357/bin/* bin/
cp -rp /root/eucalyptus/ec2-ami-tools-1.3-26357/etc/* etc/
cp -rp /root/eucalyptus/ec2-ami-tools-1.3-26357/lib/* lib/
cp -rp /root/eucalyptus/ec2-api-tools-1.3-30349/bin/* bin
cp -rp /root/eucalyptus/ec2-api-tools-1.3-30349/lib/* lib/

scp euca2-admin-x509.zip to server and unzip it

. eucarc 
export JAVA_HOME=/usr/lib/jvm/java-6-sun
export EC2_HOME=~/.euca
export PATH=$PATH:$EC2_HOME/bin

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--
-- xen
--
vi part
root 400
/mnt/ephemeral 0 /dev/sda2 
swap 1 /dev/sda3

vi firstboot
apt-get -y install openssh-server 

vmbuilder xen ubuntu --part ./part --firstboot ./firstboot
ls -al ubuntu-xen

--
-- kvm
--
vi part
root 400
swap 200 

vmbuilder kvm ubuntu -v --part ./part --firstboot ./firstboot
ls -al ubuntu-kvm


--
-- https://help.ubuntu.com/community/JeOSVMBuilder
--
vmbuilder kvm ubuntu \
		--suite jaunty \
		--verbose \
		--flavour virtual \
		--arch amd64 \
    --user cardiodx \
    --pass internalpwd \
    --hostname hardy1 \
    --mem 256 \
		--addpkg openssh-server \
		--libvirt qemu:///system

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`

ec2-describe-availability-zones verbose

uname -a

mkdir kernel
ec2-bundle-image -i /boot/vmlinuz-2.6.28-14-server -d ./kernel --kernel true
ec2-upload-bundle -b kernel -m ./kernel/vmlinuz-2.6.28-14-server.manifest.xml
EKI=`ec2-register kernel/vmlinuz-2.6.28-14-server.manifest.xml | awk '{print $2}'`; echo $EKI

mkdir ramdisk
ec2-bundle-image -i /boot/initrd.img-2.6.28-14-server -d ./ramdisk --ramdisk true
ec2-upload-bundle -b ramdisk -m ramdisk/initrd.img-2.6.28-14-server.manifest.xml
ERI=`ec2-register ramdisk/initrd.img-2.6.28-14-server.manifest.xml | awk '{print $2}'`; echo $ERI

mkdir image
ec2-bundle-image -i ubuntu-kvm/disk0.qcow2 -d ./image --kernel $EKI --ramdisk $ERI
ec2-upload-bundle -b image -m ./image/disk0.qcow2.manifest.xml
EMI=`ec2-register image/disk0.qcow2.manifest.xml | awk '{print $2}'`; echo $EMI


ec2-describe-images
-- ec2-deregister emi-29A90CFF

-- start the instance
ec2-add-keypair mykey > ~/.euca/mykey.priv
chmod 0600 ~/.euca/mykey.priv

ec2-describe-keypairs 

ec2-run-instances $EMI -k mykey
watch ec2-describe-instances


/var/lib/eucalyptus/instances/admin/i-3E8107E9

ec2-get-console-output i-4AD408EE
ec2-terminate-instances i-2E1705B2


--- Use virsh to modify image
EKI=`ec2-describe-images | grep kernel | awk '{print $2}'`
ERI=`ec2-describe-images | grep ramdisk | awk '{print $2}'`

mkdir jaunty01
ec2-bundle-image -i ubuntu-kvm/disk0.qcow2 -d ./jaunty01 --kernel $EKI --ramdisk $ERI
cd jaunty01
mv disk0.qcow2.manifest.xml manifest.xml
ec2-upload-bundle -b jaunty01 -m manifest.xml
EMI=`ec2-register jaunty01/manifest.xml | awk '{print $2}'`; echo $EMI

ec2-run-instances emi-D1E50AA8 -k mykey
watch ec2-describe-instances


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
--
-- create a new image (not working!!!!)
--
mkdir eucalyptus
cd eucalyptus
wget http://s3.amazonaws.com/ec2-downloads/ec2-api-tools-1.3-30349.zip
wget http://s3.amazonaws.com/ec2-downloads/ec2-ami-tools-1.3-26357.zip

unzip ec2-api-tools-1.3-30349.zip
unzip ec2-ami-tools-1.3-26357.zip


mkdir .euca
cd .euca
mkdir bin etc lib
cp -rp /root/eucalyptus/ec2-ami-tools-1.3-26357/bin/* bin/
cp -rp /root/eucalyptus/ec2-ami-tools-1.3-26357/etc/* etc/
cp -rp /root/eucalyptus/ec2-ami-tools-1.3-26357/lib/* lib/
cp -rp /root/eucalyptus/ec2-api-tools-1.3-30349/bin/* bin
cp -rp /root/eucalyptus/ec2-api-tools-1.3-30349/lib/* lib/

scp euca2-admin-x509.zip to server and unzip it

. eucarc
export JAVA_HOME=/usr/lib/jvm/java-6-sun
export EC2_HOME=~/.euca
export PATH=$PATH:$EC2_HOME/bin

~~~~~~~~~~~~~~~~~~~
wajig install ruby rdoc irb libyaml-ruby libzlib-ruby ri libopenssl-ruby -y
wajig install rsync curl sun-java6-jdk -y


ec2-bundle-vol -d /mnt -c ~/.euca/euca2-admin-df0daae4-cert.pem -k ~/.euca/euca2-admin-df0daae4-pk.pem -u 000100729354 -r x86_64 --no-inherit
 (386387683556 is the Amazon EC2 user ID) 000100729354


ec2-upload-bundle -b ubuntu03 -m /mnt/image.manifest.xml
???ec2-register ubuntu03/image.manifest.xml


mkdir image
ec2-bundle-image -i ubuntu-kvm/disk0.qcow2 -d ./image --kernel $EKI --ramdisk $ERI
ec2-upload-bundle -b image -m ./image/disk0.qcow2.manifest.xml
EMI=`ec2-register image/disk0.qcow2.manifest.xml | awk '{print $2}'`
echo $EMI


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
--
-- s3curl
--
http://open.eucalyptus.com/wiki/EucalyptusStorage_v1.4

wajig install libdigest-hmac-perl
wajig install xmlindent

vi s3curl.pl
#my @endpoints = ( 's3.amazonaws.com' );
my @endpoints = ( 'ubuntu904' );

. eucarc
export JAVA_HOME=/usr/lib/jvm/java-6-sun
export EC2_HOME=~/.euca
export PATH=$PATH:$EC2_HOME/bin

vi /root/.s3curl
%awsSecretAccessKeys = (
    # personal account
    cdx => {
        id => 'ISMvKXpXpadDiUoOSoAfww',
        key => 'ZFbq7ghkM53cPQ0LvvD4rP-Lyu5V0tZD-hFiVA',
    },
);

chmod 600 /root/.s3curl

./s3curl.pl --id=cdx --put /dev/null -- -s -v $S3_URL/testbucket
./s3curl.pl --id=cdx --put README -- -s -v $S3_URL/testbucket/README

./s3curl.pl --id=cdx --get -- -s $S3_URL/ubuntu01 | xmlindent


./s3curl.pl --id=cdx --get -- -s $S3_URL/image | xmlindent
./s3curl.pl --id=cdx --get -- -s $S3_URL/image/disk0.qcow2.manifest.xml | xmlindent > image.xml


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

????? s3sync
http://s3sync.net/wiki
http://s3.amazonaws.com/ServEdge_pub/s3sync/s3sync.tar.gz

mkdir .s3conf
vi s3config.yml
AWS_ACCESS_KEY_ID: ISMvKXpXpadDiUoOSoAfww
AWS_SECRET_ACCESS_KEY: ZFbq7ghkM53cPQ0LvvD4rP-Lyu5V0tZD-hFiVA



????? s3cmd
http://open.eucalyptus.com/wiki/s3cmd

wajig install python python-openssl

get s3cmd v0.9.8.3 (http://sourceforge.net/projects/s3tools/files/s3cmd/#files)

   13  vi s3cmd-0.9.8.3.patch
			http://open.eucalyptus.com/wiki/s3cmd-0.9.8.3
   15  wajig install patch
   18  mv s3cmd-0.9.8.3.patch s3cmd-0.9.8.3
   22  cd s3cmd-0.9.8.3
   23  patch -p1 < s3cmd-0.9.8.3.patch
python setup.py install

s3cmd -c s3cfg.walrus ls


????? s3cmd
download s3cmd from: http://sourceforge.net/projects/s3tools/files/s3cmd/#files
tar zxvf s3cmd-0.9.9-rc3.tar.gz
python setup.py install
--s3cmd --configure

vi s3cfg.walrus







