oracle java

http://stanford.edu/dept/itss/docs/oracle/10g/java.101/b12021/storproc.htm

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ more Oscar.java 
public class Oscar {
  public static String quote() {
    return "I can resist everything except temptation.";
  }
}


--javac Oscar.java 
--loadjava -user scott/tiger Oscar.class 
loadjava -user scott/tiger -resolve Oscar.java 


CREATE or replace FUNCTION oscar_quote RETURN VARCHAR2
  AS LANGUAGE JAVA
  NAME 'Oscar.quote() return java.lang.String';
/


VARIABLE theQuote VARCHAR2(50);
CALL oscar_quote() INTO :theQuote;
print theQuote;


drop function oscar_quote;
dropjava -user scott/tiger Oscar.class

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a$ more Hello.java 
public class Hello {
  public static String world() {
    return "hello world";
  }
}

loadjava -user scott/tiger -resolve Hello.java

CREATE OR REPLACE FUNCTION helloworld RETURN VARCHAR2 AS LANGUAGE JAVA NAME 'Hello.world () return java.lang.String';
/

SQL> variable myString varchar2(50);        
SQL> call helloworld() into :myString;
SQL> print myString;
hello world


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
$ more External.java 
import java.io.*;

public class External { 
  public static String test() {
    try {
      Runtime rt = Runtime.getRuntime();
      Process ps = rt.exec("/home/oracle/java/hello.sh");
    }
    catch (Exception ex) {
      System.out.println(ex);
    }
    return "hello!!";
  }
}


$ more hello.sh 
#!/bin/bash
/u01/app/oracle/product/10.2.0/db_1/bin/sqlplus scott/tiger @/home/oracle/java/my.sql

$ more my.sql 
insert into test values (1);
exit


exec dbms_java.grant_permission( 'SCOTT', 'SYS:java.io.FilePermission', '/home/oracle/java/hello.sh', 'execute' );
exec dbms_java.grant_permission( 'SCOTT', 'SYS:java.lang.RuntimePermission', 'writeFileDescriptor', '' );
exec dbms_java.grant_permission( 'SCOTT', 'SYS:java.lang.RuntimePermission', 'readFileDescriptor', '' );


create or replace function  myexternal return varchar2
as language java
name 'External.test() return java.lang.String';
/

variable myString varchar2(50);
call myexternal() into :myString;
print myString;

