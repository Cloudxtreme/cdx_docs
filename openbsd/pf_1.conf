# more pf.conf 
internal  = "bge1"
comcast = "em0"
xo = "em1"
dmz1 = "re0"

cc_gw = "173.13.158.190"
xo_gw = "67.95.201.193"
cdx_net = "10.10.0.0/16"

local = "{" $internal $dmz1 "}"
external = "{" $comcast $xo "}"

set state-policy if-bound
set skip on lo0

#  default deny
block in
pass out

pass in on $internal

# DMZ
pass in on $dmz1 proto tcp to $internal:network port {ssh smtp ldap} keep state
pass in on $dmz1 proto udp to $internal:network port {domain} keep state
pass in on $dmz1 proto tcp to ! $cdx_net port {http https} keep state
pass in on $dmz1 proto udp to ! $cdx_net port {ntp} keep state

pass in on $xo proto icmp to any
pass quick on $xo from 67.95.201.201
set skip on enc0

#  nat outgoing connections on each internet interface
nat on $comcast -> ($comcast)
nat on $xo -> ($xo)

#nat pass on $comcast from 10.10.43.2 to any port 22 -> 173.13.158.182
#rdr pass on $comcast proto tcp to 173.13.158.182 port 22 -> 10.10.43.2
#nat pass on $xo from 10.10.43.2 to any port 22 -> 67.95.201.199
#rdr pass on $xo proto tcp to 67.95.201.199 port 22 -> 10.10.43.2
#binat pass on $comcast from 10.10.43.2 -> 173.13.158.182
#binat pass on $xo from 10.10.43.2 -> 67.95.201.199

# rdr i.e., port-forward for webmail, lms
rdr pass on $xo proto tcp to 67.95.201.198 port 80 -> 10.10.35.17
rdr pass on $comcast proto tcp to 173.13.158.180 port 80 -> 10.10.35.17

# openvpn on firewall
# rules for dmz to internal access

#  load balance outgoing tcp traffic from internal network.
#load_balance_route  = "route-to { (" $comcast $cc_gw "), (" $xo $xo_gw ") } round-robin"
load_balance_route  = "route-to { (" $xo $xo_gw ") } round-robin"

pass in on $local $load_balance_route proto tcp to ! $cdx_net flags S/SA modulate state
pass in on $local $load_balance_route proto { udp, icmp } to ! $cdx_net keep state

#ftp
nat-anchor "ftp-proxy/*"
rdr-anchor "ftp-proxy/*"
rdr pass on $local proto tcp from any to any port 21 -> 127.0.0.1 port 8021 

#pass out on $xo route-to ($comcast $cc_gw) from $comcast:network
#pass out on $comcast route-to ($xo $xo_gw) from $xo:network


