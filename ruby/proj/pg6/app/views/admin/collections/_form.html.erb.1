<style scoped>
	.required {
		font-weight: bold;
  }
</style>

<%= form_for(@object, :html => {:id => "admin_collection"}) do |f| %>
  <% if @object.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@object.errors.count, "error") %> prohibited this object from being saved:</h2>

      <ul>
      <% @object.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

	<%
		collection = Admin::Collection.find_by_name('Collection')
		html_table_width = collection.html_table_width=='' ? 3: collection.html_table_width.to_i
	%>
	<% fields = Admin::Field.includes(:dtype).joins(:collection, :dtype).where("admin_collections.name = 'Collection'").order('display_order') %>
	<table width="100%">
		<td align='right'> <label for="fullname" class="required">Name:</label></td>
		<td align='left'>
			<input id="admin_collection_name" name="admin_collection[name]" class='k-textbox' type="text" validationMessage="Name is required!" required value="<%=@object['name']%>"/> <br />
			<span class="k-invalid-msg" data-for="admin_collection[name]"></span>
		</td>
		<%(1..html_table_width-1).each do |i| %>
			<td></td> <td></td>
		<% end %>
	<% fields.each do |field| %>
		<% required='required' if field.html_required %>

		<%=raw("<tr>") if field.display_order.to_i == 1 %>
		<div class='field'>
			<% if Admin::Collection.is_lut_column?(field.name) %>
				<td align='right'><%= f.label field.name, field.label, :class=>required %>:</td>
  	    <td align='left'>
					<%= f.select(field.name, Admin::Collection.selection_data(field.name)) %>
					<span class="k-invalid-msg" data-for="admin_collection[<%=field.name%>]"></span>
				</td>
			<% elsif Admin::Collection.is_foreign_key?(field.name) %>
				<!-- skip foreign keys -->
			<% else %>
				<td align='right'><%= f.label field.name, field.label, :class=>required %>:</td>
				<td align='left'>
					<%= raw(field.html_input_string Admin::Collection.downcase_namespace_base, Admin::Collection.downcase_name, @object[field.name]) %>
					<span class="k-invalid-msg" data-for="admin_collection[<%=field.name%>]"></span>
				</td>
			<% end %>
		</div>
		<%=raw("</tr>") if field.display_order.to_i%html_table_width == 0 %>
	<% end %>

  <!-- Foreign key(s) -->
  <% Admin::Collection.foreign_keys.each do |foreign_key| %>
    <% if params[foreign_key] %>
      <!-- <%= f.hidden_field foreign_key, :value => params[foreign_key] %><br /> -->
      <%= f.label foreign_key %><br />
      <%= f.select(foreign_key, Admin::Collection.selection_data(foreign_key), :selected => params[foreign_key]) %><br />
    <% elsif @object[foreign_key] %>
      <!-- <%= f.hidden_field foreign_key, :value => @object[foreign_key] %><br /> -->
      <%= f.label foreign_key %><br />
      <%= f.select(foreign_key, Admin::Collection.selection_data(foreign_key), :selected => @object[foreign_key]) %><br />
    <% else %>
      <%= f.label foreign_key %><br />
      <%= f.select(foreign_key, Admin::Collection.selection_data(foreign_key)) %><br />
    <% end %>
  <% end %>

	</table>
  <br />

  <div class="actions">
    <%= f.submit %>
  </div>
<% end %>


<script>
	$(document).ready(function() {

  	var validator = $("#admin_collection").kendoValidator().data("kendoValidator"),
  	status = $(".status");

    <% fields = Admin::Field.includes(:dtype).joins(:collection, :dtype).where("admin_collections.name = 'Collection'") %>
    <% fields.each do |field| %>
      <%=raw(field.widget_string(Admin::Collection.downcase_namespace_base, Admin::Collection.downcase_name)) \
            if field.widget_string(Admin::Collection.downcase_namespace_base, Admin::Collection.downcase_name) -%>
    <% end %>
	});
</script>


